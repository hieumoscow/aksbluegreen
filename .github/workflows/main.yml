# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env: 
  LOC: southeastasia
  PREFIX: aksbluegreen
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  create:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: terraformdev

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
    
      # Az login
      - name: Login
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          az login --service-principal -u ${{ secrets.CLIENT_ID }} -p ${{ secrets.CLIENT_SECRET }} --tenant ${{ secrets.TENANT_ID }}
          az account set -s ${{ secrets.SUB_ID }}
          az account show
          
          
      - name: Generate SUFFIX
        run: echo "SUFFIX=$(date +"%g%m%d%H%M")" >> $GITHUB_ENV
          
      # Az login
      - name: AKS Get versions
        run: |
          echo "BLUE_VERSION=$(az aks get-versions --location southeastasia -o json | jq -r '.orchestrators[] | select(.default == true) | .orchestratorVersion')" >> $GITHUB_ENV
          echo "GREEN_VERSION=$(az aks get-versions --location southeastasia -o json | jq -r '.orchestrators[] | select(.default == true) | .upgrades[0].orchestratorVersion')" >> $GITHUB_ENV
          echo "RG=$PREFIX-rg" >> $GITHUB_ENV
          echo "CLUSTER=$PREFIX-aks-$SUFFIX" >> $GITHUB_ENV
          echo "VNET=$PREFIX-vnet-$SUFFIX" >> $GITHUB_ENV
      - name: Create VNETs
        run: |
          $rgExists = az group exists -n $RG
          if ($rgExists -eq 'false') {
            az group create -n $RG -l $LOC
          }
          az network vnet create -g $RG -n $VNET -l $LOC --address-prefixes 10.100.0.0/22
          az network vnet subnet create -g $RG --vnet-name $VNET --name system --address-prefixes 10.100.0.0/24
          az network vnet subnet create -g $RG --vnet-name $VNET --name user-blue --address-prefixes 10.100.1.0/24
          az network vnet subnet create -g $RG --vnet-name $VNET --name user-green --address-prefixes 10.100.2.0/24
          echo "SYSTEM_SUBNET_ID=$(az network vnet subnet show -g $RG --vnet-name $VNET --name system --query id -o tsv)" >> $GITHUB_ENV
          echo "BLUE_SUBNET_ID=$(az network vnet subnet show -g $RG --vnet-name $VNET --name user-blue --query id -o tsv)" >> $GITHUB_ENV
          echo "GREEN_SUBNET_ID=$(az network vnet subnet show -g $RG --vnet-name $VNET --name user-green --query id -o tsv)" >> $GITHUB_ENV
      - name: echo
        run: |
          echo $BLUE_VERSION
          echo $GREEN_VERSION
          echo $RG
          echo $CLUSTER
          echo $VNET
          echo $SYSTEM_SUBNET_ID
          echo $GREEN_SUBNET_ID
      - name: Create AKS With Blue Version
        run: |
          az aks create -g $RG -n $CLUSTER -l $LOC --nodepool-name systempool \
          --max-pod 30 --generate-ssh-keys --network-plugin azure \
          --enable-managed-identity -c 1 \
          --vnet-subnet-id $SYSTEM_SUBNET_ID -k $BLUE_VERSION -y
      - name: Add Blue nodepool
        run: |
          az aks nodepool add -g $RG -n bluepool \
          -k $BLUE_VERSION --cluster-name $CLUSTER --vnet-subnet-id $BLUE_SUBNET_ID
      - name: Kubectl tool installer
        uses: Azure/setup-kubectl@v1
      - name: Get Kubeconfig
        run: |
          az aks get-credentials -g $RG -n $CLUSTER --admin
          kubectl get po -A
      - name: Deploy Kafka
        run: |
          kubectl apply -f $GITHUB_WORKSPACE/kafka/kafka-crds.yml
          kubectl config set-context --current --namespace kafka
          kubectl apply -f $GITHUB_WORKSPACE/kafka/kafka-cluster.yml
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: terraformdev
    needs: [create]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Kubectl tool installer
        uses: Azure/setup-kubectl@v1
      - name: wget
        run: |
          az aks get-credentials -g $RG -n $CLUSTER --admin
          kubectl get ingress -A

#   upgrade:
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest
#     environment: terraformdev
#     needs: [deploy]

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       - name: Kubectl tool installer
#         uses: Azure/setup-kubectl@v1
#       - name: Create AKS With Blue Version
        
#         run: |
#           az aks create -g $RG -n $CLUSTER -l $LOC --nodepool-name systempool \
#           --max-pod 30 --generate-ssh-keys --network-plugin azure \
#           --enable-managed-identity -c 1 \
#           --vnet-subnet-id $SYSTEM_SUBNET_ID -k $BLUE_VERSION -y    
         
#       - name: Upgrade AKS to Green Version
#         run: |
#           az aks upgrade -g $RG -n $CLUSTER --control-plane-only -k $GREEN_VERSION -y
#       - name: Upgrade AKS system nodepool to Green Version
#         run: |
#           az aks nodepool upgrade -g $RG --cluster-name $CLUSTER -n systempool -k $GREEN_VERSION
#       - name: Add Green nodepool
#         run: |
#           az aks nodepool add -g $RG -n greenpool \
#           -k $GREEN_VERSION --cluster-name $CLUSTER --vnet-subnet-id $GREEN_SUBNET_ID
#       - name: Delete AKS
#         run: |
#           az aks delete -g $RG -n $CLUSTER -y
#       - name: Destroy VNETS
#         run: |
#           az network vnet delete -g $RG -n $VNET
#           az group delete -n $RG -y

          
          
